<!DOCTYPE html>
<html lang="pt-br" xmlns:th="http://www.thymeleaf.org">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pague e leve - <span th:text="${store.name}">Nome da Loja</span></title>
    <!-- MUDANÇA: Ícone de leitor de código de barras adicionado -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .bg { background-color: #25CF03; }
        .space5 { height: 5vh; }
        .space15 { height: 10vh; }
        .card-img-top-fix { width: 100%; height: 120px; object-fit: cover; }
        /* MUDANÇA: Estilo para o container do scanner */
        #barcode-scanner-container { width: 100%; max-width: 500px; margin: auto; }
    </style>
</head>

<body class="bg">
<div class="container text-center ">
    <div class="row">
        <div class="space5"></div>
        <div class="">
            <a class="btn btn-dark rounded-5" th:href="@{/{storeId}/cart(storeId=${currentStoreId})}" id="carrinho" role="button">Ver Carrinho <i class="bi bi-cart"></i></a>
        </div>
        <div class="space15"></div>
        <div class="">
            <h1>Bem Vind@ <br>ao <span th:text="${store.name}">Nome da Loja</span></h1>
            <input type="hidden" id="storeIdData" th:value="${currentStoreId}" />
        </div>
        <div class="space15"></div>

        <!-- MUDANÇA: Adicionado botão de escanear -->
        <div class="input-group mb-3">
            <input type="text" class="form-control rounded-start-5" id="searchInput" placeholder="Digite o código ou nome do produto">
            <button class="btn bg-light" type="button" id="searchButton"><i class="bi bi-search"></i></button>
            <button class="btn btn-success rounded-end-5" type="button" id="start-scan-btn" title="Escanear Código de Barras">
                <i class="bi bi-upc-scan"></i>
            </button>
        </div>

        <!-- MUDANÇA: Container para o leitor de código de barras e mensagens -->
        <div id="scanner-ui" class="mt-3" style="display: none;">
            <div id="barcode-scanner-container"></div>
            <button id="stop-scan-btn" class="btn btn-danger mt-2">Parar Scanner</button>
        </div>
        <div id="scan-result-message" class="mt-2"></div>


        <div class="text-end">
            <a th:href="@{/{storeId}/produtos(storeId=${currentStoreId})}" type="button" class="btn btn-dark rounded-pill">Ver todos</a>
        </div>
        <div class="space15"></div>

        <div class="card text-start rounded-top-4">
            <h5 class="card-header" id="searchSectionTitle">Destaques</h5>
            <div class="card-body">
                <div class="row row-cols-3" id="highlightedProductsContainer">
                    <!-- Conteúdo dos produtos em destaque (sem alteração) -->
                    <div th:if="${highlightedProducts.empty}" class="col-12 initial-display" th:remove="tag">
                        <div class="alert alert-info text-center" role="alert">
                            Nenhum produto em destaque no momento.
                        </div>
                    </div>
                    <div class="col initial-display" th:each="product : ${highlightedProducts}">
                        <a th:href="@{/produto/{productId}(productId=${product.id}, storeId=${product.store.id})}" class="text-reset text-decoration-none">
                        <div class="card h-100">
                            <img th:src="${product.imageUrl ?: '/images/placeholder.png'}" class="card-img-top card-img-top-fix" th:alt="${product.name}">
                            <div class="card-body fw-light d-flex flex-column">
                                <h5 class="card-title" th:text="${product.name}">Nome Produto</h5>
                                <p class="card-text" th:text="${product.description} ?: 'Sem descrição.'">Descrição breve</p>
                                <h6 class="card-subtitle mb-2 text-body-secondary text-success mt-auto" th:text="${'R$ ' + #numbers.formatDecimal(product.price, 1, 2,'COMMA')}">R$ 0,00</h6>
                                <a th:href="@{/produto/{productId}(productId=${product.id}, storeId=${product.store.id})}" class="btn btn-primary mt-3">Detalhes</a>
                            </div>
                        </div>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>
<!-- MUDANÇA: Adicionada a biblioteca de leitura de QR/Código de Barras -->
<script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>

<script>
    // Script de busca existente (sem alteração)
    document.addEventListener('DOMContentLoaded', () => {
        // ... (seu código de busca existente)
    });

    // MUDANÇA: Novo script para o scanner de código de barras
    document.addEventListener('DOMContentLoaded', () => {
        const startScanBtn = document.getElementById('start-scan-btn');
        const stopScanBtn = document.getElementById('stop-scan-btn');
        const scannerUi = document.getElementById('scanner-ui');
        const messageContainer = document.getElementById('scan-result-message');
        const currentStoreId = document.getElementById('storeIdData').value;

        // Configuração do scanner
        const html5QrcodeScanner = new Html5Qrcode("barcode-scanner-container");

        const onScanSuccess = async (decodedText, decodedResult) => {
            // Para o scanner assim que um código é lido com sucesso
            html5QrcodeScanner.stop().then(() => {
                scannerUi.style.display = 'none';
                console.log(`Código lido: ${decodedText}`);
                messageContainer.innerHTML = `<div class="alert alert-info">Código ${decodedText} lido. Buscando produto...</div>`;

                // Chama nossa API para buscar o produto
                fetch(`/api/products/barcode/${decodedText}?storeId=${currentStoreId}`)
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                        if (response.status === 404) {
                            throw new Error('Produto não encontrado.');
                        }
                        throw new Error('Erro ao buscar o produto.');
                    })
                    .then(product => {
                        // Se encontrou, redireciona para a página do produto
                        messageContainer.innerHTML = `<div class="alert alert-success">Produto encontrado! Redirecionando...</div>`;
                        window.location.href = `/produto/${product.id}?storeId=${product.store.id}`;
                    })
                    .catch(error => {
                        console.error('Erro:', error);
                        messageContainer.innerHTML = `<div class="alert alert-danger">${error.message}</div>`;
                    });
            });
        };

        const onScanFailure = (error) => {
            // A biblioteca chama isso constantemente, então não mostramos erro na tela, apenas no console.
            // console.warn(`Falha na leitura do código: ${error}`);
        };

        startScanBtn.addEventListener('click', () => {
            scannerUi.style.display = 'block';
            messageContainer.innerHTML = ''; // Limpa mensagens antigas
            // Inicia a câmera e o scanner
            html5QrcodeScanner.start(
                { facingMode: "environment" }, // Usa a câmera traseira
                {
                    fps: 10, // Frames por segundo
                    qrbox: { width: 250, height: 150 } // Tamanho da caixa de leitura
                },
                onScanSuccess,
                onScanFailure
            ).catch(err => {
                console.error("Não foi possível iniciar o scanner", err);
                scannerUi.style.display = 'none';
                messageContainer.innerHTML = `<div class="alert alert-danger">Não foi possível acessar a câmera. Verifique as permissões.</div>`;
            });
        });

        stopScanBtn.addEventListener('click', () => {
            html5QrcodeScanner.stop().then(() => {
                scannerUi.style.display = 'none';
                messageContainer.innerHTML = '';
                console.log("Scanner parado pelo usuário.");
            }).catch(err => {
                console.error("Falha ao parar o scanner.", err);
                scannerUi.style.display = 'none';
            });
        });
    });
</script>
</body>
</html>